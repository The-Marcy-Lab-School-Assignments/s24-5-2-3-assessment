{
  "testScores": {
    "Factory Function Tests": {
      "FaFuTe1": 0,
      "FaFuTe2": 0,
      "FaFuTe3": 0,
      "FaFuTe4": 0,
      "FaFuTe5": 0
    },
    "Has Many / Belongs To Tests": {
      "HaMa/BeToTe1": 0,
      "HaMa/BeToTe2": 0,
      "HaMa/BeToTe3": 0,
      "HaMa/BeToTe4": 0,
      "HaMa/BeToTe5": 0,
      "HaMa/BeToTe6": 0,
      "HaMa/BeToTe7": 0,
      "HaMa/BeToTe8": 0,
      "HaMa/BeToTe9": 0,
      "HaMa/BeToTe10": 0,
      "HaMa/BeToTe11": 0,
      "HaMa/BeToTe12": 0,
      "HaMa/BeToTe13": 0,
      "HaMa/BeToTe14": 0,
      "HaMa/BeToTe15": 0
    },
    "Inheritance & Polymorphism Tests": {
      "In&PoTe1": 0,
      "In&PoTe2": 0,
      "In&PoTe3": 0,
      "In&PoTe4": 0,
      "In&PoTe5": 0,
      "In&PoTe6": 0,
      "In&PoTe7": 0,
      "In&PoTe8": 0,
      "In&PoTe9": 0,
      "In&PoTe10": 0,
      "In&PoTe11": 0,
      "In&PoTe12": 0,
      "In&PoTe13": 0,
      "In&PoTe14": 0,
      "In&PoTe15": 0
    }
  },
  "idToTestNameHash": {
    "FaFuTe1": "Factory Function Tests bankAccountFactory - object initialized with ONLY the expected methods",
    "FaFuTe2": "Factory Function Tests bankAccountFactory - checkBalance(): returns the current balance as a number",
    "FaFuTe3": "Factory Function Tests bankAccountFactory - an account value defaults to 0 if no argument is given",
    "FaFuTe4": "Factory Function Tests bankAccountFactory - add(): increases the balance and console logs a message",
    "FaFuTe5": "Factory Function Tests bankAccountFactory - subtract(): decreases the balance and logs a message",
    "HaMa/BeToTe1": "Has Many / Belongs To Tests ToDoItem - Creates the minimum required instance properties",
    "HaMa/BeToTe2": "Has Many / Belongs To Tests ToDoList - Creates the minimum required instance properties",
    "HaMa/BeToTe3": "Has Many / Belongs To Tests ToDoList - Has the minimum required instance methods",
    "HaMa/BeToTe4": "Has Many / Belongs To Tests ToDoList - createItem(): Can create a ToDoItem that belongs to it",
    "HaMa/BeToTe5": "Has Many / Belongs To Tests ToDoList - getItems(): returns all items that belong to it",
    "HaMa/BeToTe6": "Has Many / Belongs To Tests ToDoList - getItems(): returns a copy of the items that belong to it, not the original",
    "HaMa/BeToTe7": "Has Many / Belongs To Tests ToDoList - getCompletedCount(): returns the number of completed items in the list",
    "HaMa/BeToTe8": "Has Many / Belongs To Tests ToDoList - Has the minimum required class methods",
    "HaMa/BeToTe9": "Has Many / Belongs To Tests ToDoList - list(): Can list all instances of the class",
    "HaMa/BeToTe10": "Has Many / Belongs To Tests ToDoList - list(): the list returned is a shallow copy of the internal state",
    "HaMa/BeToTe11": "Has Many / Belongs To Tests ToDoList - findBy(): Can find an instance of itself by id",
    "HaMa/BeToTe12": "Has Many / Belongs To Tests ToDoItem - Has at *least* one extra instance property",
    "HaMa/BeToTe13": "Has Many / Belongs To Tests ToDoItem - Has at *least* one extra instance method",
    "HaMa/BeToTe14": "Has Many / Belongs To Tests ToDoList - Has at *least* one extra instance property",
    "HaMa/BeToTe15": "Has Many / Belongs To Tests ToDoList - Has at *least* one extra instance method",
    "In&PoTe1": "Inheritance & Polymorphism Tests Phone - creates the right instance properties",
    "In&PoTe2": "Inheritance & Polymorphism Tests Phone - creates the right instance methods",
    "In&PoTe3": "Inheritance & Polymorphism Tests Phone - addContact(): adds a contact to the contacts array and returns the right message",
    "In&PoTe4": "Inheritance & Polymorphism Tests Phone - addContact(): returns \"Invalid\" and doesn't add a contact if name or phoneNumber are missing",
    "In&PoTe5": "Inheritance & Polymorphism Tests Phone - addContact(): returns \"Invalid\" and does not add a contact if phoneNumber is not exactly 10 digit string",
    "In&PoTe6": "Inheritance & Polymorphism Tests Phone - removeContact(): removes a contact from the contacts array and returns the right message",
    "In&PoTe7": "Inheritance & Polymorphism Tests Phone - removeContact(): returns the right message if the contact is not found",
    "In&PoTe8": "Inheritance & Polymorphism Tests Phone - removeContact(): mutates instead of replacing the contact array to remove contact",
    "In&PoTe9": "Inheritance & Polymorphism Tests Phone - makeCall(): returns the right message if the contact is found",
    "In&PoTe10": "Inheritance & Polymorphism Tests Phone - makeCall(): returns \"Calling [number]...\" if the contact is not found and number is a valid number",
    "In&PoTe11": "Inheritance & Polymorphism Tests Phone - makeCall(): returns \"Invalid\" if given non 10 digit string number or name not in contacts",
    "In&PoTe12": "Inheritance & Polymorphism Tests AppleIPhone - creates a phone with the right instance properties",
    "In&PoTe13": "Inheritance & Polymorphism Tests AppleIPhone - creates a phone with the right instance methods",
    "In&PoTe14": "Inheritance & Polymorphism Tests AppleIPhone - inherits from Phone",
    "In&PoTe15": "Inheritance & Polymorphism Tests AppleIPhone - sendIMessage(): returns the right message when messaging iPhones vs. others"
  },
  "testNameToIdHash": {
    "Factory Function Tests bankAccountFactory - object initialized with ONLY the expected methods": "FaFuTe1",
    "Factory Function Tests bankAccountFactory - checkBalance(): returns the current balance as a number": "FaFuTe2",
    "Factory Function Tests bankAccountFactory - an account value defaults to 0 if no argument is given": "FaFuTe3",
    "Factory Function Tests bankAccountFactory - add(): increases the balance and console logs a message": "FaFuTe4",
    "Factory Function Tests bankAccountFactory - subtract(): decreases the balance and logs a message": "FaFuTe5",
    "Has Many / Belongs To Tests ToDoItem - Creates the minimum required instance properties": "HaMa/BeToTe1",
    "Has Many / Belongs To Tests ToDoList - Creates the minimum required instance properties": "HaMa/BeToTe2",
    "Has Many / Belongs To Tests ToDoList - Has the minimum required instance methods": "HaMa/BeToTe3",
    "Has Many / Belongs To Tests ToDoList - createItem(): Can create a ToDoItem that belongs to it": "HaMa/BeToTe4",
    "Has Many / Belongs To Tests ToDoList - getItems(): returns all items that belong to it": "HaMa/BeToTe5",
    "Has Many / Belongs To Tests ToDoList - getItems(): returns a copy of the items that belong to it, not the original": "HaMa/BeToTe6",
    "Has Many / Belongs To Tests ToDoList - getCompletedCount(): returns the number of completed items in the list": "HaMa/BeToTe7",
    "Has Many / Belongs To Tests ToDoList - Has the minimum required class methods": "HaMa/BeToTe8",
    "Has Many / Belongs To Tests ToDoList - list(): Can list all instances of the class": "HaMa/BeToTe9",
    "Has Many / Belongs To Tests ToDoList - list(): the list returned is a shallow copy of the internal state": "HaMa/BeToTe10",
    "Has Many / Belongs To Tests ToDoList - findBy(): Can find an instance of itself by id": "HaMa/BeToTe11",
    "Has Many / Belongs To Tests ToDoItem - Has at *least* one extra instance property": "HaMa/BeToTe12",
    "Has Many / Belongs To Tests ToDoItem - Has at *least* one extra instance method": "HaMa/BeToTe13",
    "Has Many / Belongs To Tests ToDoList - Has at *least* one extra instance property": "HaMa/BeToTe14",
    "Has Many / Belongs To Tests ToDoList - Has at *least* one extra instance method": "HaMa/BeToTe15",
    "Inheritance & Polymorphism Tests Phone - creates the right instance properties": "In&PoTe1",
    "Inheritance & Polymorphism Tests Phone - creates the right instance methods": "In&PoTe2",
    "Inheritance & Polymorphism Tests Phone - addContact(): adds a contact to the contacts array and returns the right message": "In&PoTe3",
    "Inheritance & Polymorphism Tests Phone - addContact(): returns \"Invalid\" and doesn't add a contact if name or phoneNumber are missing": "In&PoTe4",
    "Inheritance & Polymorphism Tests Phone - addContact(): returns \"Invalid\" and does not add a contact if phoneNumber is not exactly 10 digit string": "In&PoTe5",
    "Inheritance & Polymorphism Tests Phone - removeContact(): removes a contact from the contacts array and returns the right message": "In&PoTe6",
    "Inheritance & Polymorphism Tests Phone - removeContact(): returns the right message if the contact is not found": "In&PoTe7",
    "Inheritance & Polymorphism Tests Phone - removeContact(): mutates instead of replacing the contact array to remove contact": "In&PoTe8",
    "Inheritance & Polymorphism Tests Phone - makeCall(): returns the right message if the contact is found": "In&PoTe9",
    "Inheritance & Polymorphism Tests Phone - makeCall(): returns \"Calling [number]...\" if the contact is not found and number is a valid number": "In&PoTe10",
    "Inheritance & Polymorphism Tests Phone - makeCall(): returns \"Invalid\" if given non 10 digit string number or name not in contacts": "In&PoTe11",
    "Inheritance & Polymorphism Tests AppleIPhone - creates a phone with the right instance properties": "In&PoTe12",
    "Inheritance & Polymorphism Tests AppleIPhone - creates a phone with the right instance methods": "In&PoTe13",
    "Inheritance & Polymorphism Tests AppleIPhone - inherits from Phone": "In&PoTe14",
    "Inheritance & Polymorphism Tests AppleIPhone - sendIMessage(): returns the right message when messaging iPhones vs. others": "In&PoTe15"
  },
  "humanReadable": {
    "Factory Function Tests": "0/5",
    "finalTestScore": "FINAL SCORE: 0/35",
    "Has Many / Belongs To Tests": "0/15",
    "Inheritance & Polymorphism Tests": "0/15"
  }
}